# Copyright (c) Facebook, Inc. and its affiliates.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: AX Generate Trails
description: |
  Generate Parameters for Training.
inputs:
  - {name: Total Trials}
  - {name: Parameters, type: JsonArray}
  - {name: Objective Name}
outputs:
  - {name: Client, description: 'AX Client snapshot'}
  - {name: Trial Parameters, description: 'Generated Model Parameters'}
implementation:
  container:
    image: k3d-myregistry.localhost:5000/muzhi1991/pytorch_kfp_components:2B1C27A7
    command:
      - sh
      - -ec
      - |
        # This is how additional packages can be installed dynamically
        python3 -m pip install --user --no-warn-script-location ax-platform SQLAlchemy
        # Run the rest of the command after installing the packages.
        "$0" "$@"
      - python3
      - -u # Auto-flush. We want the logs to appear in the console immediately.
      - -c # Inline scripts are easy, but have size limitaions and the error traces do not show source lines.
      - "import os\nimport sys\nimport json\nfrom ax.service.ax_client import AxClient\n\ntotal_trials = int(sys.argv[1])\nparameters = sys.argv[2]\nobjective_name = sys.argv[3]\ntrial_params_path = sys.argv[4]\nclient_json_path = sys.argv[5]\n\ndict_params = json.loads(parameters)\n\nax_client = AxClient()\nax_client.create_experiment(\n  parameters=dict_params,\n  objective_name=objective_name,\n)\n\ntrials_to_evaluate = {}\nfor _ in range(total_trials):\n  parameterization, trial_index = ax_client.get_next_trial()\n  trials_to_evaluate[trial_index] = parameterization\n\nos.makedirs(os.path.dirname(trial_params_path), exist_ok=True)\nwith open(trial_params_path, 'w') as writer:\n  writer.write(json.dumps(trials_to_evaluate))\n        \nos.makedirs(client_json_path, exist_ok=True)\nax_client.save_to_json_file(client_json_path+'/client.json')\n"
      - {inputValue: Total Trials}
      - {inputValue: Parameters}
      - {inputValue: Objective Name}
      - {outputPath: Trial Parameters}
      - {outputPath: Client}
